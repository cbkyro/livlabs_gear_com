{"version":3,"sources":["webpack:///./assets/js/theme/auth.js","webpack:///./assets/js/theme/common/form-validation.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/each.js","webpack:///./node_modules/lodash/transform.js"],"names":["Auth","context","formCreateSelector","registerLoginValidation","$loginForm","loginModel","loginValidator","nod","submit","add","selector","validate","cb","val","result","email","errorMessage","useValidEmail","password","enterPass","on","performCheck","areAll","event","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","forgotPasswordValidator","forms","registerNewPasswordValidation","newPasswordForm","newPasswordValidator","$","passwordSelector","password2Selector","Validators","setPasswordValidation","passwordRequirements","registerCreateAccountValidator","$createAccountForm","validationModel","validation","createAccountValidator","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","$last","stateCountry","err","field","Error","$field","getStatus","remove","is","setStateCountryValidation","cleanUpStateValidation","setEmailValidation","onReady","classifyForm","$newPasswordForm","length","buildDateValidation","$formField","min_date","max_date","invalidMessage","formElementId","attr","minSplit","split","maxSplit","minDate","Date","maxDate","triggeredBy","day","Number","find","month","year","chosenDate","buildRequiredCheckboxValidation","formFieldId","primarySelector","secondarySelector","each","index","checkbox","checked","label","buildRequiredValidation","buildNumberRangeValidation","formFieldSelector","min","max","name","numberVal","buildValidation","$validateableElement","data","fieldValidations","type","dateValidation","push","required","element","$inputElement","tagName","get","inputName","elementSelector","$form","validationsToPerform","input","concat"],"mappings":"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","file":"theme-bundle.chunk.7.js","sourcesContent":["import PageManager from './page-manager';\r\nimport stateCountry from './common/state-country';\r\nimport $ from 'jquery';\r\nimport nod from './common/nod';\r\nimport validation from './common/form-validation';\r\nimport forms from './common/models/forms';\r\nimport { classifyForm, Validators } from './common/form-utils';\r\n\r\nexport default class Auth extends PageManager {\r\n    constructor(context) {\r\n        super(context);\r\n        this.formCreateSelector = 'form[data-create-account-form]';\r\n    }\r\n\r\n    registerLoginValidation($loginForm) {\r\n        const loginModel = forms;\r\n\r\n        this.loginValidator = nod({\r\n            submit: '.login-form input[type=\"submit\"]',\r\n        });\r\n\r\n        this.loginValidator.add([\r\n            {\r\n                selector: '.login-form input[name=\"login_email\"]',\r\n                validate: (cb, val) => {\r\n                    const result = loginModel.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.useValidEmail,\r\n            },\r\n            {\r\n                selector: '.login-form input[name=\"login_pass\"]',\r\n                validate: (cb, val) => {\r\n                    const result = loginModel.password(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.enterPass,\r\n            },\r\n        ]);\r\n\r\n        $loginForm.on('submit', event => {\r\n            this.loginValidator.performCheck();\r\n\r\n            if (this.loginValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    registerForgotPasswordValidation($forgotPasswordForm) {\r\n        this.forgotPasswordValidator = nod({\r\n            submit: '.forgot-password-form input[type=\"submit\"]',\r\n        });\r\n\r\n        this.forgotPasswordValidator.add([\r\n            {\r\n                selector: '.forgot-password-form input[name=\"email\"]',\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.useValidEmail,\r\n            },\r\n        ]);\r\n\r\n        $forgotPasswordForm.on('submit', event => {\r\n            this.forgotPasswordValidator.performCheck();\r\n\r\n            if (this.forgotPasswordValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    registerNewPasswordValidation() {\r\n        const newPasswordForm = '.new-password-form';\r\n        const newPasswordValidator = nod({\r\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\r\n        });\r\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\r\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\r\n\r\n        Validators.setPasswordValidation(\r\n            newPasswordValidator,\r\n            passwordSelector,\r\n            password2Selector,\r\n            this.passwordRequirements,\r\n        );\r\n    }\r\n\r\n    registerCreateAccountValidator($createAccountForm) {\r\n        const validationModel = validation($createAccountForm);\r\n        const createAccountValidator = nod({\r\n            submit: `${this.formCreateSelector} input[type='submit']`,\r\n        });\r\n        const $stateElement = $('[data-field-type=\"State\"]');\r\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\r\n        const $emailElement = $(emailSelector);\r\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\r\n        const $passwordElement = $(passwordSelector);\r\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\r\n        const $password2Element = $(password2Selector);\r\n\r\n        createAccountValidator.add(validationModel);\r\n\r\n        if ($stateElement) {\r\n            let $last;\r\n\r\n            // Requests the states for a country with AJAX\r\n            stateCountry($stateElement, this.context, (err, field) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                const $field = $(field);\r\n\r\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\r\n                    createAccountValidator.remove($stateElement);\r\n                }\r\n\r\n                if ($last) {\r\n                    createAccountValidator.remove($last);\r\n                }\r\n\r\n                if ($field.is('select')) {\r\n                    $last = field;\r\n                    Validators.setStateCountryValidation(createAccountValidator, field);\r\n                } else {\r\n                    Validators.cleanUpStateValidation(field);\r\n                }\r\n            });\r\n        }\r\n\r\n        if ($emailElement) {\r\n            createAccountValidator.remove(emailSelector);\r\n            Validators.setEmailValidation(createAccountValidator, emailSelector);\r\n        }\r\n\r\n        if ($passwordElement && $password2Element) {\r\n            createAccountValidator.remove(passwordSelector);\r\n            createAccountValidator.remove(password2Selector);\r\n            Validators.setPasswordValidation(\r\n                createAccountValidator,\r\n                passwordSelector,\r\n                password2Selector,\r\n                this.passwordRequirements,\r\n            );\r\n        }\r\n\r\n        $createAccountForm.on('submit', event => {\r\n            createAccountValidator.performCheck();\r\n\r\n            if (createAccountValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\r\n     */\r\n    onReady() {\r\n        const $createAccountForm = classifyForm(this.formCreateSelector);\r\n        const $loginForm = classifyForm('.login-form');\r\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\r\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\r\n\r\n        // Injected via auth.html\r\n        this.passwordRequirements = this.context.passwordRequirements;\r\n\r\n        if ($loginForm.length) {\r\n            this.registerLoginValidation($loginForm);\r\n        }\r\n\r\n        if ($newPasswordForm.length) {\r\n            this.registerNewPasswordValidation();\r\n        }\r\n\r\n        if ($forgotPasswordForm.length) {\r\n            this.registerForgotPasswordValidation($forgotPasswordForm);\r\n        }\r\n\r\n        if ($createAccountForm.length) {\r\n            this.registerCreateAccountValidator($createAccountForm);\r\n        }\r\n    }\r\n}\r\n","import $ from 'jquery';\r\n\r\n/**\r\n * Validate that the given date for the day/month/year select inputs is within potential range\r\n * @param $formField\r\n * @param validation\r\n * @returns {{selector: string, triggeredBy: string, validate: Function, errorMessage: string}}\r\n */\r\nfunction buildDateValidation($formField, validation) {\r\n    // No date range restriction, skip\r\n    if (validation.min_date && validation.max_date) {\r\n        const invalidMessage = `Your chosen date must fall between ${validation.min_date} and ${validation.max_date}.`;\r\n        const formElementId = $formField.attr('id');\r\n        const minSplit = validation.min_date.split('-');\r\n        const maxSplit = validation.max_date.split('-');\r\n        const minDate = new Date(minSplit[0], minSplit[1] - 1, minSplit[2]);\r\n        const maxDate = new Date(maxSplit[0], maxSplit[1] - 1, maxSplit[2]);\r\n\r\n        return {\r\n            selector: `#${formElementId} select[data-label=\"year\"]`,\r\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\r\n            validate: (cb, val) => {\r\n                const day = Number($formField.find('select[data-label=\"day\"]').val());\r\n                const month = Number($formField.find('select[data-label=\"month\"]').val()) - 1;\r\n                const year = Number(val);\r\n                const chosenDate = new Date(year, month, day);\r\n\r\n                cb(chosenDate >= minDate && chosenDate <= maxDate);\r\n            },\r\n            errorMessage: invalidMessage,\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * We validate checkboxes separately from single input fields, as they must have at least one checked option\r\n * from many different inputs\r\n * @param $formField\r\n * @param validation\r\n */\r\nfunction buildRequiredCheckboxValidation($formField, validation) {\r\n    const formFieldId = $formField.attr('id');\r\n    const primarySelector = `#${formFieldId} input:first-of-type`;\r\n    const secondarySelector = `#${formFieldId} input`;\r\n\r\n    return {\r\n        selector: primarySelector,\r\n        triggeredBy: secondarySelector,\r\n        validate: (cb) => {\r\n            let result = false;\r\n\r\n            $(secondarySelector).each((index, checkbox) => {\r\n                if (checkbox.checked) {\r\n                    result = true;\r\n\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            cb(result);\r\n        },\r\n        errorMessage: `The '${validation.label}' field cannot be blank.`,\r\n    };\r\n}\r\n\r\nfunction buildRequiredValidation(validation, selector) {\r\n    return {\r\n        selector,\r\n        validate(cb, val) {\r\n            cb(val.length > 0);\r\n        },\r\n        errorMessage: `The '${validation.label}' field cannot be blank.`,\r\n    };\r\n}\r\n\r\nfunction buildNumberRangeValidation(validation, formFieldSelector) {\r\n    const invalidMessage = `The value for ${validation.label} must be between ${validation.min} and ${validation.max}.`;\r\n    const min = Number(validation.min);\r\n    const max = Number(validation.max);\r\n\r\n    return {\r\n        selector: `${formFieldSelector} input[name=\"${validation.name}\"]`,\r\n        validate: (cb, val) => {\r\n            const numberVal = Number(val);\r\n\r\n            cb(numberVal >= min && numberVal <= max);\r\n        },\r\n        errorMessage: invalidMessage,\r\n    };\r\n}\r\n\r\n\r\nfunction buildValidation($validateableElement) {\r\n    const validation = $validateableElement.data('validation');\r\n    const fieldValidations = [];\r\n    const formFieldSelector = `#${$validateableElement.attr('id')}`;\r\n\r\n    if (validation.type === 'datechooser') {\r\n        const dateValidation = buildDateValidation($validateableElement, validation);\r\n\r\n        if (dateValidation) {\r\n            fieldValidations.push(dateValidation);\r\n        }\r\n    } else if (validation.required && (validation.type === 'checkboxselect' || validation.type === 'radioselect')) {\r\n        fieldValidations.push(buildRequiredCheckboxValidation($validateableElement, validation));\r\n    } else {\r\n        $validateableElement.find('input, select, textarea').each((index, element) => {\r\n            const $inputElement = $(element);\r\n            const tagName = $inputElement.get(0).tagName;\r\n            const inputName = $inputElement.attr('name');\r\n            const elementSelector = `${formFieldSelector} ${tagName}[name=\"${inputName}\"]`;\r\n\r\n            if (validation.type === 'numberonly') {\r\n                fieldValidations.push(buildNumberRangeValidation(validation, formFieldSelector));\r\n            }\r\n            if (validation.required) {\r\n                fieldValidations.push(buildRequiredValidation(validation, elementSelector));\r\n            }\r\n        });\r\n    }\r\n\r\n    return fieldValidations;\r\n}\r\n\r\n/**\r\n * Builds the validation model for dynamic forms\r\n * @param $form\r\n * @returns {Array}\r\n */\r\nexport default function ($form) {\r\n    let validationsToPerform = [];\r\n\r\n    $form.find('[data-validation]').each((index, input) => {\r\n        validationsToPerform = validationsToPerform.concat(buildValidation($(input)));\r\n    });\r\n\r\n    return validationsToPerform;\r\n}\r\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n"],"sourceRoot":""}