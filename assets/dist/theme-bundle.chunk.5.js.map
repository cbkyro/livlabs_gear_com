{"version":3,"sources":["webpack:///./assets/js/theme/common/form-utils.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/product.js","webpack:///./assets/js/theme/product/reviews.js","webpack:///./assets/js/theme/product/video-gallery.js"],"names":["inputTagNames","classifyInput","input","formFieldClass","$input","$","$formField","parent","tagName","prop","toLowerCase","className","specificClassName","inputType","addClass","classifyForm","formSelector","options","$form","$inputs","find","join","each","__","getFieldId","$field","fieldId","match","length","insertStateHiddenField","$stateField","stateFieldAttrs","type","name","value","after","Validators","setEmailValidation","validator","field","add","selector","validate","cb","val","result","forms","email","errorMessage","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","data","Object","keys","nod","classes","forEach","hasClass","removeClass","re","test","password","notEmpty","Product","context","url","window","location","href","$reviewLink","onReady","document","on","indexOf","history","replaceState","title","pathname","collapsibleFactory","productDetails","BCData","product_attributes","videoGallery","$reviewForm","review","registerValidation","performCheck","areAll","productReviewHandler","trigger","submit","$reviewsContent","$collapsible","initLinkBind","injectPaginationLink","collapseReviews","$content","CollapsibleEvents","click","hash","$nextLink","$prevLink","attr","reviewRating","reviewSubject","reviewComment","reviewEmail","VideoGallery","$element","$player","$videos","currentVideo","bindEvents","selectNewVideo","e","preventDefault","$target","currentTarget","id","$selectedThumb","setMainVideo","setActiveThumb","bind","pluginKey","$videoGallery","index","element","$el","isInitialized"],"mappings":"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","file":"theme-bundle.chunk.5.js","sourcesContent":["import $ from 'jquery';\r\nimport _ from 'lodash';\r\nimport nod from './nod';\r\nimport forms from './models/forms';\r\n\r\nconst inputTagNames = [\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n];\r\n\r\n/**\r\n * Apply class name to an input element on its type\r\n * @param {object} input\r\n * @param {string} formFieldClass\r\n * @return {object} Element itself\r\n */\r\nfunction classifyInput(input, formFieldClass) {\r\n    const $input = $(input);\r\n    const $formField = $input.parent(`.${formFieldClass}`);\r\n    const tagName = $input.prop('tagName').toLowerCase();\r\n\r\n    let className = `${formFieldClass}--${tagName}`;\r\n    let specificClassName;\r\n\r\n    // Input can be text/checkbox/radio etc...\r\n    if (tagName === 'input') {\r\n        const inputType = $input.prop('type');\r\n\r\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\r\n            // ie: .form-field--checkbox, .form-field--radio\r\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\r\n        } else {\r\n            // ie: .form-field--input .form-field--inputText\r\n            specificClassName = `${className}${_.capitalize(inputType)}`;\r\n        }\r\n    }\r\n\r\n    // Apply class modifier\r\n    return $formField\r\n        .addClass(className)\r\n        .addClass(specificClassName);\r\n}\r\n\r\n/**\r\n * Apply class name to each input element in a form based on its type\r\n * @example\r\n * // Before\r\n * <form id=\"form\">\r\n *     <div class=\"form-field\">\r\n *         <input type=\"text\">\r\n *     </div>\r\n *     <div class=\"form-field\">\r\n *         <select>...</select>\r\n *     </div>\r\n * </form>\r\n *\r\n * classifyForm('#form', { formFieldClass: 'form-field' });\r\n *\r\n * // After\r\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\r\n * <div class=\"form-field form-field--select\">...</div>\r\n *\r\n * @param {string|object} formSelector - selector or element\r\n * @param {object} options\r\n * @return {jQuery} Element itself\r\n */\r\nexport function classifyForm(formSelector, options = {}) {\r\n    const $form = $(formSelector);\r\n    const $inputs = $form.find(inputTagNames.join(', '));\r\n\r\n    // Obtain options\r\n    const { formFieldClass = 'form-field' } = options;\r\n\r\n    // Classify each input in a form\r\n    $inputs.each((__, input) => {\r\n        classifyInput(input, formFieldClass);\r\n    });\r\n\r\n    return $form;\r\n}\r\n\r\n/**\r\n * Get id from given field\r\n * @param {object} $field JQuery field object\r\n * @return {string}\r\n */\r\nfunction getFieldId($field) {\r\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\r\n\r\n    if (fieldId && fieldId.length !== 0) {\r\n        return fieldId[0];\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\n/**\r\n * Insert hidden field after State/Province field\r\n * @param {object} $stateField JQuery field object\r\n */\r\nfunction insertStateHiddenField($stateField) {\r\n    const fieldId = getFieldId($stateField);\r\n    const stateFieldAttrs = {\r\n        type: 'hidden',\r\n        name: `FormFieldIsText${fieldId}`,\r\n        value: '1',\r\n    };\r\n\r\n    $stateField.after($('<input />', stateFieldAttrs));\r\n}\r\n\r\nconst Validators = {\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setEmailValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a valid email.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param validator\r\n     * @param passwordSelector\r\n     * @param password2Selector\r\n     * @param requirements\r\n     * @param isOptional\r\n     */\r\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\r\n        const $password = $(passwordSelector);\r\n        const passwordValidations = [\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.match(new RegExp(requirements.alpha))\r\n                        && val.match(new RegExp(requirements.numeric))\r\n                        && val.length >= requirements.minlength;\r\n\r\n                    // If optional and nothing entered, it is valid\r\n                    if (isOptional && val.length === 0) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: requirements.error,\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val === $password.val();\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'Your passwords do not match.',\r\n            },\r\n        ];\r\n\r\n        validator.add(passwordValidations);\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param {Nod} validator\r\n     * @param {Object} selectors\r\n     * @param {string} selectors.errorSelector\r\n     * @param {string} selectors.fieldsetSelector\r\n     * @param {string} selectors.formSelector\r\n     * @param {string} selectors.maxPriceSelector\r\n     * @param {string} selectors.minPriceSelector\r\n     */\r\n    setMinMaxPriceValidation: (validator, selectors) => {\r\n        const {\r\n            errorSelector,\r\n            fieldsetSelector,\r\n            formSelector,\r\n            maxPriceSelector,\r\n            minPriceSelector,\r\n        } = selectors;\r\n\r\n        validator.configure({\r\n            form: formSelector,\r\n            preventSubmit: true,\r\n            successClass: '_', // KLUDGE: Don't apply success class\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: minPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: maxPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Max. price is required.',\r\n            selector: maxPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min. price is required.',\r\n            selector: minPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Input must be greater than 0.',\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            validate: 'min-number:0',\r\n        });\r\n\r\n        validator.setMessageOptions({\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            parent: fieldsetSelector,\r\n            errorSpan: errorSelector,\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setStateCountryValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: 'presence',\r\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes classes from dirty form if previously checked\r\n     * @param field\r\n     */\r\n    cleanUpStateValidation: (field) => {\r\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\r\n\r\n        Object.keys(nod.classes).forEach((value) => {\r\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\r\n                $fieldClassElement.removeClass(nod.classes[value]);\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nexport { Validators, insertStateHiddenField };\r\n","const forms = {\r\n    email(value) {\r\n        const re = /^.+@.+\\..+/;\r\n        return re.test(value);\r\n    },\r\n\r\n    /**\r\n     * Validates a password field\r\n     * @param value\r\n     * @returns {boolean}\r\n     */\r\n    password(value) {\r\n        return this.notEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * validates if a field is empty\r\n     * @param value\r\n     * @returns {boolean}\r\n     *\r\n     */\r\n    notEmpty(value) {\r\n        return value.length > 0;\r\n    },\r\n};\r\n\r\nexport default forms;\r\n","/*\r\n Import all product specific js\r\n */\r\nimport $ from 'jquery';\r\nimport PageManager from './page-manager';\r\nimport Review from './product/reviews';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport ProductDetails from './common/product-details';\r\nimport videoGallery from './product/video-gallery';\r\nimport { classifyForm } from './common/form-utils';\r\n\r\nexport default class Product extends PageManager {\r\n    constructor(context) {\r\n        super(context);\r\n        this.url = window.location.href;\r\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\r\n    }\r\n\r\n    onReady() {\r\n        // Listen for foundation modal close events to sanitize URL after review.\r\n        $(document).on('close.fndtn.reveal', () => {\r\n            if (this.url.indexOf('#write_review') !== -1 && typeof window.history.replaceState === 'function') {\r\n                window.history.replaceState(null, document.title, window.location.pathname);\r\n            }\r\n        });\r\n\r\n        let validator;\r\n\r\n        // Init collapsible\r\n        collapsibleFactory();\r\n\r\n        this.productDetails = new ProductDetails($('.productView'), this.context, window.BCData.product_attributes);\r\n\r\n        videoGallery();\r\n\r\n        const $reviewForm = classifyForm('.writeReview-form');\r\n        const review = new Review($reviewForm);\r\n\r\n        $('body').on('click', '[data-reveal-id=\"modal-review-form\"]', () => {\r\n            validator = review.registerValidation(this.context);\r\n        });\r\n\r\n        $reviewForm.on('submit', () => {\r\n            if (validator) {\r\n                validator.performCheck();\r\n                return validator.areAll('valid');\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        this.productReviewHandler();\r\n    }\r\n\r\n    productReviewHandler() {\r\n        if (this.url.indexOf('#write_review') !== -1) {\r\n            this.$reviewLink.trigger('click');\r\n        }\r\n    }\r\n}\r\n","import $ from 'jquery';\r\nimport nod from '../common/nod';\r\nimport { CollapsibleEvents } from '../common/collapsible';\r\nimport forms from '../common/models/forms';\r\n\r\nexport default class {\r\n    constructor($reviewForm) {\r\n        this.validator = nod({\r\n            submit: $reviewForm.find('input[type=\"submit\"]'),\r\n        });\r\n\r\n        this.$reviewsContent = $('#product-reviews');\r\n        this.$collapsible = $('[data-collapsible]', this.$reviewsContent);\r\n\r\n        this.initLinkBind();\r\n        this.injectPaginationLink();\r\n        this.collapseReviews();\r\n    }\r\n\r\n    /**\r\n     * On initial page load, the user clicks on \"(12 Reviews)\" link\r\n     * The browser jumps to the review page and should expand the reviews section\r\n     */\r\n    initLinkBind() {\r\n        const $content = $('#productReviews-content', this.$reviewsContent);\r\n\r\n        $('.productView-reviewLink').on('click', () => {\r\n            if (!$content.hasClass('is-open')) {\r\n                this.$collapsible.trigger(CollapsibleEvents.click);\r\n            }\r\n        });\r\n    }\r\n\r\n    collapseReviews() {\r\n        // We're in paginating state, do not collapse\r\n        if (window.location.hash && window.location.hash.indexOf('#product-reviews') === 0) {\r\n            return;\r\n        }\r\n\r\n        // force collapse on page load\r\n        this.$collapsible.trigger(CollapsibleEvents.click);\r\n    }\r\n\r\n    /**\r\n     * Inject ID into the pagination link\r\n     */\r\n    injectPaginationLink() {\r\n        const $nextLink = $('.pagination-item--next .pagination-link', this.$reviewsContent);\r\n        const $prevLink = $('.pagination-item--previous .pagination-link', this.$reviewsContent);\r\n\r\n        if ($nextLink.length) {\r\n            $nextLink.attr('href', `${$nextLink.attr('href')} #product-reviews`);\r\n        }\r\n\r\n        if ($prevLink.length) {\r\n            $prevLink.attr('href', `${$prevLink.attr('href')} #product-reviews`);\r\n        }\r\n    }\r\n\r\n    registerValidation(context) {\r\n        this.context = context;\r\n        this.validator.add([{\r\n            selector: '[name=\"revrating\"]',\r\n            validate: 'presence',\r\n            errorMessage: this.context.reviewRating,\r\n        }, {\r\n            selector: '[name=\"revtitle\"]',\r\n            validate: 'min-length:2',\r\n            errorMessage: this.context.reviewSubject,\r\n        }, {\r\n            selector: '[name=\"revtext\"]',\r\n            validate: 'min-length:2',\r\n            errorMessage: this.context.reviewComment,\r\n        }, {\r\n            selector: '[name=\"email\"]',\r\n            validate: (cb, val) => {\r\n                const result = forms.email(val);\r\n                cb(result);\r\n            },\r\n            errorMessage: this.context.reviewEmail,\r\n        }]);\r\n\r\n        return this.validator;\r\n    }\r\n\r\n    validate() {\r\n        return this.validator.performCheck();\r\n    }\r\n}\r\n","import $ from 'jquery';\r\n\r\nexport class VideoGallery {\r\n    constructor($element) {\r\n        this.$player = $element.find('[data-video-player]');\r\n        this.$videos = $element.find('[data-video-item]');\r\n        this.currentVideo = {};\r\n        this.bindEvents();\r\n    }\r\n\r\n    selectNewVideo(e) {\r\n        e.preventDefault();\r\n\r\n        const $target = $(e.currentTarget);\r\n\r\n        this.currentVideo = {\r\n            id: $target.data('videoId'),\r\n            $selectedThumb: $target,\r\n        };\r\n\r\n        this.setMainVideo();\r\n        this.setActiveThumb();\r\n    }\r\n\r\n    setMainVideo() {\r\n        this.$player.attr('src', `//www.youtube.com/embed/${this.currentVideo.id}`);\r\n    }\r\n\r\n    setActiveThumb() {\r\n        this.$videos.removeClass('is-active');\r\n        this.currentVideo.$selectedThumb.addClass('is-active');\r\n    }\r\n\r\n    bindEvents() {\r\n        this.$videos.on('click', this.selectNewVideo.bind(this));\r\n    }\r\n}\r\n\r\nexport default function videoGallery() {\r\n    const pluginKey = 'video-gallery';\r\n    const $videoGallery = $(`[data-${pluginKey}]`);\r\n\r\n    $videoGallery.each((index, element) => {\r\n        const $el = $(element);\r\n        const isInitialized = $el.data(pluginKey) instanceof VideoGallery;\r\n\r\n        if (isInitialized) {\r\n            return;\r\n        }\r\n\r\n        $el.data(pluginKey, new VideoGallery($el));\r\n    });\r\n}\r\n"],"sourceRoot":""}